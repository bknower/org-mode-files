#+TITLE: CS3650: Lecture 13

* Sample sort - parallel quicksort
- Pick random pivot
- Partition array into 2 pieces

* Limits of parallel processing
- Assuming infinite parallel processors, the total processing time could only be
  reduced to the sequential time, with the parallel time at effectively 0.

* Problem: Data Races
Conditions for a data race:
- Concurrent execution of multiple processes or threads
- The processes must share some data (read or write)
- At least one process must write
Plans to fix data races:
** Locks:
The lock rule:
- Every piece of shared data has an associated lock.
- When the shared data is accessed the accessing process must hold the lock.
Problems:
- If you're not careful, locks make your program sequential
- Deadlock:
  - If you have more then one lock, your program can deadlock
  - Caused by circular wait
  - Avoiding deadlock with locks:
    - Deadlock can only be avoided by programmer-enforced programming conventions.
    - Convention idea: never hold more than one lock
    - Convention idea: lock ordering
  - Lock ordering:
    - Define a single global order for all locks in your program
    - You may not take a lock if you're already holding a lock that comes before
      it in the ordering
